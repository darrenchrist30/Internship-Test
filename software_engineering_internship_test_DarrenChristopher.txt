Darren Christopher

1. create table customers ( customer_id int AUTO_INCREMENT primary key, customer_name varchar(100), customer_email varchar(50), customer_phone varchar(20), customer_address varchar(100) );

2. create table purchases ( purchase_id int AUTO_INCREMENT primary key, customer_id int, purchase_date date, total_price int, FOREIGN KEY (customer_id) REFERENCES customers(customer_id) );

3. insert into customers (customer_name, customer_email, customer_phone, customer_address) values ("John Doe", "johndoe@example.com", "123-456-7890", "123 Main St, Anytown USA"), ("Jane Doe", "janedoe@example.com", "555-555-5555", "456 Elm St, Anytown USA"), ("Bob Smith", "bobsmith@example.com", "987-654-3210", "789 Oak Ave, Anytown USA"), ("Paul Reyes", "paulreyes@example.com", "678-123-4567", "731 North St, Anytown USA"), ("Billy Alexander", "billyalexander@example.com", "777-888-9999", "332 South St, Anytown USA"), ("Marrie Anne", "marrieanne@example.com", "895-348-3472", "332 West St, Anytown USA");

insert into purchases (customer_id, purchase_date, total_price) values (1, '2022-01-15', 100), (1, '2022-02-20', 150), (2, '2022-03-05', 200), (2, '2022-04-10', 75), (2, '2022-06-15', 300), (3, '2022-01-30', 50), (3, '2022-05-01', 125), (5, '2022-01-14', 275), (2, '2022-01-07', 135), (5, '2022-01-24', 225);

4. select * from customers where customer_name like '%doe%';

5. select c.customer_id, c.customer_name, sum(p.total_price) as total_purchases from customers c join purchases p on c.customer_id = p.customer_id group by c.customer_id, c.customer_name order by total_purchases desc;

6. select c.customer_id, c.customer_name, date_format(p.purchase_date, '%Y%m') as period, count(*) as total_purchase from customers c join purchases p on c.customer_id = p.customer_id where p.purchase_date between '2022-01-01' and '2022-01-31' group by c.customer_id, c.customer_name, period;

7. select date_format(purchase_date, '%Y-%m') as bulan, AVG(total_price) as rata_rata from purchases where purchase_date BETWEEN '2022-01-01' and '2022-12-31' group by bulan order by bulan;

8. select c.customer_id, c.customer_name from customers c left join purchases p on c.customer_id = p.customer_id where p.purchase_id is null;

9. select c.customer_id, c.customer_name, date_format(p.purchase_date, '%Y-%m') as bulan, sum(p.total_price) as total_pembelian from customers c join purchases p on c.customer_id = p.customer_id group by c.customer_id, c.customer_name, bulan having sum(p.total_price) > 500;